/*Problem Description
给你n个整数，求他们中所有奇数的乘积。
Input
输入数据包含多个测试实例，每个测试实例占一行，每行的第一个数为n，
表示本组数据一共有n个，接着是n个整数，你可以假设每组数据必定至少存在一个奇数。
Output
输出每组数中的所有奇数的乘积，对于测试实例，输出一行。*/
#include<stdio.h>

int m(int a)
{
    int x;
    int multiply=1;                       //在计算每组数据奇数的乘积前初始化乘积为1
    while(a--)
        {
            scanf("%d",&x);                 //每输入一个数判断它的奇偶
            if(x%2!=0)
                multiply*=x;                    //是奇数就与multiply相乘
        }
    return multiply;
}

int main()
{
    int n;
    while(scanf("%d",&n)==1)        //输入数字n代表需要输入的整数个数
    {

        printf("%d\n",m(n));            //输出奇数的乘积
    }
    return 0;
}



//这个其实就和之前的方法一样一样的，只不过是改成了函数调用的形式上。
//事实上，可以看出，在程序更复杂的情况下，函数调用分工明确，操作简洁，但对于类似这道题简单的题来说就显得头重脚轻了，占内存空间大运算时间长
